# 增强安全的Nginx配置

# 设置用户和工作进程
user nginx;
worker_processes auto;
worker_cpu_affinity auto;

# 错误日志配置
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 事件配置
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    worker_rlimit_nofile 65535;
}

http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # 缓冲区大小限制（防止缓冲区溢出攻击）
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 10m;
    large_client_header_buffers 4 4k;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # 隐藏Nginx版本
    server_tokens off;
    
    # 日志格式（包含安全相关信息）
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '$request_length $connection_requests';
                       
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/atom+xml
        image/svg+xml;
    
    # 安全头配置（全局）
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    
    # 上游服务器配置
    upstream web_backend {
        server prompthub:9011 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream mcp_backend {
        server prompthub:9010 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 速率限制配置
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    
    # 连接限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # HTTP重定向到HTTPS
    server {
        listen 80;
        server_name _;
        
        # 健康检查例外
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 其他所有请求重定向到HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # HTTPS主服务器配置
    server {
        listen 443 ssl http2;
        server_name yourdomain.com www.yourdomain.com;
        
        # SSL配置
        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;
        
        # SSL安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP装订
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # HSTS头
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # CSP头
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.openai.com wss: ws:; object-src 'none'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
        
        # 日志
        access_log /var/log/nginx/access.log security;
        error_log /var/log/nginx/error.log;
        
        # 连接和请求限制
        limit_conn addr 50;
        limit_req zone=general burst=20 nodelay;
        
        # 安全配置
        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 禁止访问备份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 阻止常见攻击路径
        location ~* /(wp-admin|wp-login|phpmyadmin|admin|xmlrpc\.php) {
            deny all;
            access_log off;
            return 444;
        }
        
        # 健康检查（无日志）
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 登录API特殊限制
        location ~* ^/api/(auth|login) {
            limit_req zone=login burst=2 nodelay;
            proxy_pass http://web_backend;
            include /etc/nginx/proxy_params;
        }
        
        # API路由限制
        location ^~ /api/ {
            limit_req zone=api burst=50 nodelay;
            
            # 阻止SQL注入和XSS攻击
            if ($args ~* (\b(select|insert|update|delete|drop|create|alter|exec|union|script)\b|['"`;\\])) {
                return 403;
            }
            
            proxy_pass http://web_backend;
            include /etc/nginx/proxy_params;
        }
        
        # MCP API路由
        location ^~ /mcp/ {
            limit_req zone=api burst=30 nodelay;
            
            proxy_pass http://mcp_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API特定超时
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
        }
        
        # 文件上传路由
        location ^~ /api/upload {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 10m;
            
            proxy_pass http://web_backend;
            include /etc/nginx/proxy_params;
            
            # 上传超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # 静态文件缓存和安全
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            proxy_pass http://web_backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff";
            
            # 防止图片热链
            valid_referers none blocked yourdomain.com *.yourdomain.com;
            if ($invalid_referer) {
                return 403;
            }
        }
        
        # 主Web应用
        location / {
            proxy_pass http://web_backend;
            include /etc/nginx/proxy_params;
            
            # WebSocket支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # 自定义错误页面
        error_page 403 /403.html;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /403.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}

# 包含额外的代理参数配置
# /etc/nginx/proxy_params:
# proxy_set_header Host $host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_set_header X-Request-ID $request_id;
# proxy_redirect off; 