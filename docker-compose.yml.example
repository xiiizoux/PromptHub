services:
  # PromptHub主应用 (Web + MCP)
  prompthub:
    build: .
    container_name: prompthub
    ports:
      - "9010:9010"  # MCP服务端口
      - "9011:9011"  # Web服务端口
    environment:
      # 基本环境配置
      - NODE_ENV=production
      - PORT=9010
      - FRONTEND_PORT=9011
      - TRANSPORT_TYPE=sse
      - NODE_OPTIONS=--max-old-space-size=4096  # 为UI库预留更多内存
      
      # 存储配置 - 默认使用supabase
      # 可选值: supabase (已预留file, postgresql, mysql等类型支持)
      - STORAGE_TYPE=${STORAGE_TYPE:-supabase}
      
      # 如果使用file存储时的路径配置
      - STORAGE_PATH=${STORAGE_PATH:-./data}
      
      # Supabase配置
      - SUPABASE_URL=${SUPABASE_URL:-}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-}
      - NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY=${NEXT_PUBLIC_SUPABASE_SERVICE_ROLE_KEY:-}
      - JWT_SECRET=${JWT_SECRET:-}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-}
      
      # API密钥配置
      - API_KEY=${API_KEY:-default-api-key-for-docker}
      - SERVER_KEY=${SERVER_KEY:-default-server-key-for-docker}
    volumes:
      # 持久化数据存储
      - ./data:/app/mcp/data  # 文件存储数据目录
      - ./logs:/app/logs      # 日志目录
      
      # 配置文件挂载 (只读模式)
      - ./.env:/app/.env:ro
    restart: unless-stopped
    # 内存限制配置 - 支持重型UI应用构建和运行
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9010", "&&", "curl", "-f", "http://localhost:9011"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - prompthub-network

networks:
  prompthub-network:
    driver: bridge 